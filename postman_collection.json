{
  "info": {
    "name": "Desafio T√©cnico PLSS - API Completa",
    "description": "Collection completa para testar a API do Sistema de Times de Futebol",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "version": "2.0.0"
  },
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:8000",
      "type": "string",
      "description": "URL base da API"
    },
    {
      "key": "access_token",
      "value": "",
      "type": "string",
      "description": "Token JWT para autentica√ß√£o"
    }
  ],
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{access_token}}",
        "type": "string"
      }
    ]
  },
  "item": [
    {
      "name": "üîê Autentica√ß√£o",
      "item": [
        {
          "name": "1. Registrar Usu√°rio",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"username\": \"teste123\",\n  \"email\": \"teste@email.com\",\n  \"password\": \"minhasenha123\",\n  \"team_favorite\": \"Flamengo\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/users/signup",
              "host": ["{{base_url}}"],
              "path": ["users", "signup"]
            },
            "description": "Registra um novo usu√°rio com time favorito"
          }
        },
        {
          "name": "2. Login (Obter Token)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"username\": \"teste123\",\n  \"password\": \"minhasenha123\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/users/login",
              "host": ["{{base_url}}"],
              "path": ["users", "login"]
            },
            "description": "Faz login e retorna o token JWT"
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "// Salva automaticamente o token na vari√°vel",
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('access_token', response.access_token);",
                  "    console.log('‚úÖ Token salvo automaticamente!');",
                  "    console.log('Token:', response.access_token);",
                  "} else {",
                  "    console.log('‚ùå Erro no login:', pm.response.json());",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "3. Meu Perfil",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/users/me",
              "host": ["{{base_url}}"],
              "path": ["users", "me"]
            },
            "description": "Retorna dados do usu√°rio logado (requer token)"
          }
        }
      ]
    },
    {
      "name": "‚öΩ Times",
      "item": [
        {
          "name": "1. Listar Times do Brasileir√£o",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/teams/brasileirao",
              "host": ["{{base_url}}"],
              "path": ["teams", "brasileirao"]
            },
            "description": "Lista todos os times do Campeonato Brasileiro"
          }
        },
        {
          "name": "2. Detalhes de um Time",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/teams/1776",
              "host": ["{{base_url}}"],
              "path": ["teams", "1776"]
            },
            "description": "Retorna detalhes completos de um time espec√≠fico (substitua 1776 pelo ID desejado)"
          }
        },
        {
          "name": "3. Partidas de um Time",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/teams/1776/matches",
              "host": ["{{base_url}}"],
              "path": ["teams", "1776", "matches"]
            },
            "description": "Lista as partidas de um time espec√≠fico"
          }
        }
      ]
    },
    {
      "name": "üìä Sistema e Estat√≠sticas",
      "item": [
        {
          "name": "1. Indicadores de Times",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/indicadores",
              "host": ["{{base_url}}"],
              "path": ["indicadores"]
            },
            "description": "Retorna estat√≠sticas e indicadores dos times (mais antigo, distribui√ß√£o por d√©cada, etc.)"
          }
        },
        {
          "name": "2. Importar Dados Frescos",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/importar",
              "host": ["{{base_url}}"],
              "path": ["importar"]
            },
            "description": "For√ßa importa√ß√£o de dados frescos da API football-data.org"
          }
        },
        {
          "name": "3. Status da API",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{base_url}}/status",
              "host": ["{{base_url}}"],
              "path": ["status"]
            },
            "description": "Verifica se a API est√° online (endpoint p√∫blico)"
          }
        }
      ]
    },
    {
      "name": "üë• Usu√°rios (Administrativo)",
      "item": [
        {
          "name": "1. Listar Todos os Usu√°rios",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/users/all",
              "host": ["{{base_url}}"],
              "path": ["users", "all"]
            },
            "description": "Lista todos os usu√°rios (endpoint administrativo)"
          }
        },
        {
          "name": "2. Deletar Usu√°rio",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/users/1",
              "host": ["{{base_url}}"],
              "path": ["users", "1"]
            },
            "description": "Deleta um usu√°rio pelo ID (substitua 1 pelo ID desejado)"
          }
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Script executado antes de cada requisi√ß√£o",
          "console.log('üöÄ Executando requisi√ß√£o para:', pm.request.url);",
          "",
          "// Verifica se o token est√° presente para endpoints protegidos",
          "const token = pm.collectionVariables.get('access_token');",
          "const url = pm.request.url.toString();",
          "",
          "if (!token && !url.includes('/login') && !url.includes('/signup') && !url.includes('/status')) {",
          "    console.log('‚ö†Ô∏è Token n√£o encontrado! Execute o login primeiro.');",
          "}"
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Script executado ap√≥s cada resposta",
          "console.log('üìä Status da resposta:', pm.response.code);",
          "",
          "// Verifica se a resposta foi bem-sucedida",
          "if (pm.response.code >= 200 && pm.response.code < 300) {",
          "    console.log('‚úÖ Requisi√ß√£o bem-sucedida!');",
          "} else if (pm.response.code === 401) {",
          "    console.log('üîí Token inv√°lido ou expirado. Fa√ßa login novamente.');",
          "} else if (pm.response.code >= 400) {",
          "    console.log('‚ùå Erro na requisi√ß√£o:', pm.response.json());",
          "}"
        ]
      }
    }
  ]
}